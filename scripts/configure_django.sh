#!/bin/bash

echo "‚öôÔ∏è [configure_django.sh] Configuration du projet Django..."

PROJECT_DIR="$BASE_DIR/$SITE_NAME"
SETTINGS_DIR="$PROJECT_DIR/$SITE_NAME"
SETTINGS_PATH="$SETTINGS_DIR/settings.py"
TEMPLATE_PATH="$BASE_DIR/templates/settings.template.py"
ENV_PATH="$SETTINGS_DIR/.env"
GUNICORN_SOCKET="/run/gunicorn-$SITE_NAME.sock"

# 1. Cr√©er le projet Django s‚Äôil n‚Äôexiste pas
if [[ ! -d "$PROJECT_DIR" ]]; then
    echo "üìÅ Cr√©ation du projet Django : $SITE_NAME"
    django-admin startproject "$SITE_NAME" "$PROJECT_DIR"
else
    echo "‚ÑπÔ∏è Projet Django d√©j√† existant. Aucun changement."
fi

# 2. Installer python-dotenv
source "$PROJECT_DIR/venv/bin/activate"
pip install python-dotenv

# 3. G√©n√©rer une SECRET_KEY
SECRET_KEY=$(openssl rand -base64 64 | tr -dc 'a-zA-Z0-9' | head -c50)

# 4. G√©n√©rer le fichier .env
cat > "$ENV_PATH" <<EOF
# Auto-generated by configure_django.sh
DEBUG=False
SECRET_KEY=$SECRET_KEY
DOMAIN_NAME=$DOMAIN_NAME
DB_NAME=$DB_NAME
DB_USER=$DB_USER
DB_PASS=$DB_PASS
GUNICORN_SOCKET=$GUNICORN_SOCKET
EOF

echo "‚úÖ Fichier .env g√©n√©r√© √† $ENV_PATH"

# 5. Sauvegarde du settings.py existant
if [[ -f "$SETTINGS_PATH" ]]; then
    cp "$SETTINGS_PATH" "$SETTINGS_PATH.bak_$(date +%s)"
    echo "üíæ Ancien settings.py sauvegard√©."
fi

# 6. Remplir settings.py √† partir du template
echo "üß© Application du template settings.template.py..."
export DEBUG SECRET_KEY DOMAIN_NAME DB_NAME DB_USER DB_PASS GUNICORN_SOCKET SITE_NAME
envsubst < "$TEMPLATE_PATH" > "$SETTINGS_PATH"

echo "‚úÖ Nouveau settings.py g√©n√©r√© depuis template."

# 7. √âcraser urls.py avec le template personnalis√©
URLS_TEMPLATE="$BASE_DIR/templates/urls.template.py"
URLS_PATH="$SETTINGS_DIR/urls.py"

if [[ -f "$URLS_TEMPLATE" ]]; then
    cp "$URLS_TEMPLATE" "$URLS_PATH"
    echo "‚úÖ Fichier urls.py personnalis√© appliqu√©."
else
    echo "‚ö†Ô∏è Template urls.py non trouv√©. Aucun changement appliqu√©."
fi